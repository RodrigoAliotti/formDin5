<?php
/**
 * System generated by SysGen (System Generator with Formdin Framework) 
 * Download SysGenAd: https://github.com/bjverde/sysgenad
 * Download Formdin5 Framework: https://github.com/bjverde/formDin5
 * 
 * SysGen  Version: 0.6.0
 * FormDin Version: 5.0.0
 * 
 * System appex created in: 2022-08-17 01:36:21
 */

class tb_ufFormDin extends TPage
{

    protected $form; //Registration form Adianti
    protected $frm;  //Registration component FormDin 5
    protected $datagrid; //Listing
    protected $pageNavigation;

    // trait com onReload, onSearch, onDelete, onClear, onEdit, show
    use Adianti\Base\AdiantiStandardFormTrait;
    // trait com onReload, onSearch, onDelete...
    use Adianti\Base\AdiantiStandardListTrait;

    public function __construct()
    {
        parent::__construct();
        // $this->adianti_target_container = 'adianti_right_panel';

        $this->setDatabase('dbapoio'); // define the database
        $this->setActiveRecord('tb_uf'); // define the Active Record
        $this->setDefaultOrder('cod_uf', 'asc'); // define the default order

        $primaryKey = 'cod_uf';
        $this->frm = new TFormDin($this,'tb_uf');
        $frm = $this->frm;
        $frm->enableCSRFProtection(); // Protection cross-site request forgery 
        $frm->addHiddenField( $primaryKey );   // coluna chave da tabela
        $frm->addTextField('sig_uf', 'Sig Uf',50,true,50);
        $frm->addTextField('nom_uf', 'Nom Uf',50,true,50);
        $frm->addNumberField('cod_regiao', 'Cod Regiao',1,true,0);

        // O Adianti permite a Internacionalização - A função _t('string') serve
        //para traduzir termos no sistema. Veja ApplicationTranslator escrevendo
        //primeiro em ingles e depois traduzindo
        $frm->setAction( 'Buscar', 'onSearch', null, 'fas:search', 'black' );
        $frm->setAction( _t('Save'), 'onSave', null, 'fa:save', 'green' );
        $frm->setActionLink( _t('Clear'), 'onClear', null, 'fa:eraser', 'red');

        $this->form = $frm->show();
        $this->form->setData( TSession::getValue(__CLASS__.'_filter_data'));

        $mixUpdateFields = $primaryKey.'|'.$primaryKey
                        .',sig_uf|sig_uf'
                        .',nom_uf|nom_uf'
                        .',cod_regiao|cod_regiao'
                        ;
        $grid = new TFormDinGrid($this,'gd','Data Grid');
        $grid->setUpdateFields($mixUpdateFields);
        $grid->addColumn($primaryKey,'id');
        $grid->addColumn('sig_uf','Sig Uf');
        $grid->addColumn('nom_uf','Nom Uf');
        $grid->addColumn('cod_regiao','Cod Regiao');

        $this->datagrid = $grid->show();
        $this->pageNavigation = $grid->getPageNavigation();
        $panelGroupGrid = $grid->getPanelGroupGrid();


        // creates the page structure using a table
        $formDinBreadCrumb = new TFormDinBreadCrumb(__CLASS__);
        $vbox = $formDinBreadCrumb->getAdiantiObj();
        $vbox->add($this->form);
        $vbox->add($panelGroupGrid);

        // add the table inside the page
        parent::add($vbox);
    }

    //--------------------------------------------------------------------------------
    /**
     * Close right panel
     */
     /*
    public function onClose()
    {
        TScript::create("Template.closeRightPanel()");
    } //END onClose
     */

    //--------------------------------------------------------------------------------
    public function onSave($param)
    {
        $this->form->validate();
        $data = $this->form->getData();
        
        //FormDinHelper::d($param,'$param');
        //FormDinHelper::debug($data,'$data');
        //FormDinHelper::debug($_REQUEST,'$_REQUEST');
        try{
            $messageAction = null;
            TTransaction::open($this->database); // open a transaction

            $object = new tb_uf(); // create an empty object 
            $object->fromArray( (array) $data); // load the object with data
            $object->store(); // save the object 

            $this->form->setData($data); // fill form data
            TTransaction::close(); // close the transaction

            new TMessage('info', "Registro salvo", $messageAction); 
            $this->onReload();
        }catch (Exception $e){
            new TMessage(TFormDinMessage::TYPE_ERROR, $e->getMessage());
        } //END TryCatch
    } //END onSave
}